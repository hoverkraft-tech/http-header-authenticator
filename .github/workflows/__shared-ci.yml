name: Internal - Common Continuous Integration tasks

on:
  workflow_call:

jobs:

  golangci-lint:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '1.21'
      - name: Run linters
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54

  go-test:
    strategy:
      matrix:
        go-version: ['1.21']
        platform: [self-hosted]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5.0.0
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run tests
        run: go test ./... -v -covermode=count

  go-coverage:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '1.21'
      - name: Calc coverage
        run: |
          go test ./... -v -covermode=count -coverprofile=coverage.out
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1.0.9
        with:
          version: v1.0.6
      - name: Coveralls
        uses: coverallsapp/github-action@v2.2.3
        with:
          github-token: ${{ secrets.github_token }}
          file: coverage.lcov
          allow-empty: true

  chart-testing:
    runs-on: self-hosted
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install tools with asdf
      - name: Install tools with asdf
        uses: asdf-vm/actions/install@v3

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.9.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}

  skaffold-build:
    name: üë∑‚Äç‚ôÇÔ∏è Run skaffold build
    runs-on: self-hosted
    steps:
      # Login to docker hub
      - name: üîí Login to hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_REGISTRY_USER }}
          password: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
          registry: ${{ env.SKAFFOLD_DEFAULT_REPO   }}

      # Get a local copy of the code
      - uses: actions/checkout@v4

      # Prepare cache storage
      - name: ‚ôªÔ∏è Cache skaffold dirs
        uses: actions/cache@v4
        env:
          cache-name: cache-skaffold
        with:
          path: /home/runner/.skaffold
          key: skaffold-${{ github.sha }}
          restore-keys: |
            skaffold-

      # Install tools with asdf
      - name: üì¶ Install tools with asdf
        uses: asdf-vm/actions/install@v3

      # install buildx
      # FIXME: should not this being done upstream ?
      - name: üì¶ Install buildx
        run: |
          echo "+ install buildx"
          set -x
          mkdir -p ~/.docker/cli-plugins
          wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.12.1/buildx-v0.12.1.linux-amd64
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker buildx create --name multiarch --use
          docker buildx inspect --bootstrap
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled

      # Run a skaffold build
      - name: üè≠ Run skaffold build
        uses: hiberbee/github-action-skaffold@1.27.0
        with:
          skaffold-version: 2.8.0
          command: build
          repository: ${{ env.SKAFFOLD_DEFAULT_REPO }}
          tag: ${{ github.event.inputs.tagVersion }}
