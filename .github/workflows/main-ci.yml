name: Main - Continuous Integration

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:

  ci:
    name: Continuous Integration
    uses: ./.github/workflows/__shared-ci.yml
    secrets: inherit

  docker-build-images:
    name: Docker Build Images
    needs: ci
    uses: hoverkraft-tech/ci-github-container/.github/workflows/docker-build-images.yml@0.14.4
    permissions:
      contents: read
      id-token: write
      issues: read
      packages: write
      pull-requests: read
    secrets:
      oci-registry-password: ${{ secrets.GITHUB_TOKEN }}
    with:
      runs-on: '["self-hosted"]'
      oci-registry: "ghcr.io"
      images: |
        [{
          "name": "app",
          "dockerfile": "./Dockerfile",
          "platforms": [
            "linux/amd64",
            "linux/arm64"
          ]
        }]

  dockerhub-publish:
    name: Dockerhub Publish
    needs: docker-build-images
    runs-on: self-hosted
    steps:
      - uses: docker/login-action@v3
        with:
          registry: "ghcr.io"
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: "docker.io"
          username: ${{ secrets.DOCKERHUB_REGISTRY_USER     }}
          password: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}

      - name: Push built images to Docker.io
        run: |
          APP_IMAGE="${{ fromJson(needs.docker-build-images.outputs.built-images).app.images[0] }}"
          docker pull "$APP_IMAGE"
          APP_TAG="${{ fromJson(needs.docker-build-images.outputs.built-images).APP.tags[0] }}"
          APP_REGISTRY_PATH="docker.io/webofmars"
          APP_DOCKERIO_IMAGE="${APP_REGISTRY_PATH}/http-header-authenticator:$APP_TAG"
          docker tag "$APP_IMAGE" "$APP_DOCKERIO_IMAGE"
          docker push "$APP_DOCKERIO_IMAGE"

  update_release_draft:
    # we want to publish a new tag only if ci succeeds
    needs: ci
    permissions:
      contents: write
      pull-requests: write
    runs-on: self-hosted
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: true
          disable-autolabeler: true
